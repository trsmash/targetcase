version: '3.4'
services:

  #PHP Service
  app:
    build:
      context: .
      network: host
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
        - ./:/var/www
        - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "443:443"
    volumes:
        - ./:/var/www
        - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: targetcase
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
        - dbdata:/var/lib/mysql/
        - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Mongo DB Service
  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      # provide your credentials here
      - MONGO_INITDB_DATABASE=mongo_targetcase
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - ./storage/mongodb:/data/db
    networks:
      - app-network

  #Redis Service
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
